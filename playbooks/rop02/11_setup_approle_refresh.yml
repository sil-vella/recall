---
- name: Setup AppRole Secret Refresh CronJob
  hosts: "{{ vault_vm_name }}_private"
  become: true
  vars:
    vault_user: "{{ vault_vm_name }}_user"
    kubeconfig_path: "/home/{{ vault_user }}/.kube/config"
    vault_namespace: vault-system
  tasks:
    - name: Create vault root token secret
      shell: |
        # Get the current root token from the vault user's home
        ROOT_TOKEN=$(cat /home/{{ vault_user }}/.vault-token)
        
        # Create or update the secret
        kubectl create secret generic vault-root-token \
          --from-literal=token="$ROOT_TOKEN" \
          -n {{ vault_namespace }} \
          --dry-run=client -o yaml | kubectl apply -f -
        
        echo "✅ Vault root token secret created/updated"
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      changed_when: true

    - name: Create SSH key secret for rop02 access
      shell: |
        # Check if SSH key exists
        if [ ! -f /home/{{ vault_user }}/.ssh/id_rsa ]; then
          echo "Generating SSH key for rop02 access..."
          sudo -u {{ vault_user }} ssh-keygen -t rsa -b 4096 -f /home/{{ vault_user }}/.ssh/id_rsa -N ""
        fi
        
        # Create secret with SSH key
        kubectl create secret generic rop02-ssh-key \
          --from-file=id_rsa=/home/{{ vault_user }}/.ssh/id_rsa \
          --from-file=id_rsa.pub=/home/{{ vault_user }}/.ssh/id_rsa.pub \
          -n {{ vault_namespace }} \
          --dry-run=client -o yaml | kubectl apply -f -
        
        echo "✅ SSH key secret created/updated"
        echo "📋 Public key for rop02 authorized_keys:"
        cat /home/{{ vault_user }}/.ssh/id_rsa.pub
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: ssh_key_output
      changed_when: true

    - name: Deploy AppRole refresh CronJob
      shell: |
        cat <<EOF | kubectl apply -f -
        apiVersion: batch/v1
        kind: CronJob
        metadata:
          name: vault-approle-refresh
          namespace: {{ vault_namespace }}
        spec:
          # Run daily at 3 AM
          schedule: "0 3 * * *"
          jobTemplate:
            spec:
              template:
                spec:
                  serviceAccountName: vault-approle-refresher
                  containers:
                  - name: approle-refresher
                    image: vault:1.19.0
                    env:
                    - name: VAULT_ADDR
                      value: "http://vault:8200"
                    - name: VAULT_TOKEN
                      valueFrom:
                        secretKeyRef:
                          name: vault-root-token
                          key: token
                    - name: APPROLE_ROLE_ID
                      value: "b272c720-2106-78c5-b872-4a095860d703"
                    - name: ROP02_HOST
                      value: "10.0.0.3"
                    - name: ROP02_USER
                      value: "rop02_user"
                    command:
                    - /bin/sh
                    - -c
                    - |
                      set -e
                      echo "=== \$(date) Starting AppRole secret refresh ==="
                      
                      # Generate new secret ID
                      echo "Generating new secret ID..."
                      NEW_SECRET_ID=\$(vault write -field=secret_id \\
                        auth/approle/role/flask-app-approle/secret-id)
                      
                      if [ -z "\$NEW_SECRET_ID" ]; then
                        echo "ERROR: Failed to generate new secret ID"
                        exit 1
                      fi
                      
                      echo "New secret ID generated: \${NEW_SECRET_ID:0:15}..."
                      
                      # Update secret on rop02 via SSH
                      echo "Updating secret on rop02..."
                      ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \\
                        \${ROP02_USER}@\${ROP02_HOST} "
                        kubectl delete secret vault-approle-creds -n flask-app --ignore-not-found=true
                        kubectl create secret generic vault-approle-creds \\
                          --from-literal=role_id='\${APPROLE_ROLE_ID}' \\
                          --from-literal=secret_id='\${NEW_SECRET_ID}' \\
                          -n flask-app
                        echo 'Secret updated successfully on rop02'
                      "
                      
                      # Restart Flask deployment to pick up new secret
                      echo "Restarting Flask deployment..."
                      ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \\
                        \${ROP02_USER}@\${ROP02_HOST} "
                        kubectl rollout restart deployment/flask-app -n flask-app
                      "
                      
                      echo "=== \$(date) AppRole secret refresh completed ==="
                    volumeMounts:
                    - name: ssh-key
                      mountPath: /root/.ssh
                      readOnly: true
                  volumes:
                  - name: ssh-key
                    secret:
                      secretName: rop02-ssh-key
                      defaultMode: 0600
                  restartPolicy: OnFailure
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: vault-approle-refresher
          namespace: {{ vault_namespace }}
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: vault-approle-refresher
          namespace: {{ vault_namespace }}
        rules:
        - apiGroups: [""]
          resources: ["secrets"]
          verbs: ["get", "list"]
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: vault-approle-refresher
          namespace: {{ vault_namespace }}
        subjects:
        - kind: ServiceAccount
          name: vault-approle-refresher
          namespace: {{ vault_namespace }}
        roleRef:
          kind: Role
          name: vault-approle-refresher
          apiGroup: rbac.authorization.k8s.io
        EOF
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      changed_when: true

    - name: Display setup instructions
      debug:
        msg: |
          ✅ AppRole refresh CronJob setup completed!
          
          📋 Next steps:
          1. Add the SSH public key to rop02's authorized_keys:
             {{ ssh_key_output.stdout_lines[-1] }}
          
          2. Test the setup manually:
             kubectl create job --from=cronjob/vault-approle-refresh test-refresh -n {{ vault_namespace }}
             kubectl logs job/test-refresh -n {{ vault_namespace }}
          
          3. Monitor the CronJob:
             kubectl get cronjobs -n {{ vault_namespace }}
             kubectl get jobs -n {{ vault_namespace }}
          
          🔄 Schedule: Daily at 3 AM
          📍 Namespace: {{ vault_namespace }}
          🎯 Target: Updates vault-approle-creds secret on rop02
          
          ⚠️  Remember to add the SSH public key to rop02! 